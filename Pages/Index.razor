@page "/"
@using Google.Cloud.Firestore
@using ExArbete.Data
@inject FirestoreDb firestoreDb

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.
@if (isLoading)
{
    <p>Loading...</p>
}
@foreach (Category category in categories)
{
    <p>@category.Name</p>
}


<SurveyPrompt Title="How is Blazor working for you?" />

@code {
    private bool isLoading = true;
    private FirestoreChangeListener firestoreChangeListener;
    private List<Category> categories = new();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            @* categories = await GetCategories(); *@
            firestoreChangeListener = firestoreDb.Collection("categories")
                        .OrderBy("Name")
                        .Listen(async (snapshot) =>
                        {

                            isLoading = false;
                            categories.Clear();
                            categories.AddRange(snapshot.Documents.Select(d => d.ConvertTo<Category>()));
                            await InvokeAsync(() => StateHasChanged());
                        });
        }
    }

    private async Task<List<Category>> GetCategories()
    {
        CollectionReference collection = firestoreDb.Collection("categories");

        QuerySnapshot snapshot = await firestoreDb.Collection("categories").GetSnapshotAsync();
        @* foreach (DocumentSnapshot doc in snapshot)
            {
            Console.WriteLine(doc.Id);
            Category cat = doc.ConvertTo<Category>();
            Console.WriteLine(cat.Name);
            }
            return new List<Category>(); *@
        return snapshot.Documents.Select(d => d.ConvertTo<Category>()).ToList<Category>();
    }

    public void Dispose()
    {
        firestoreChangeListener?.StopAsync();
        Console.WriteLine("stop");
    }
}
