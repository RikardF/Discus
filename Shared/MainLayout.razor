@inherits LayoutComponentBase
@inject IJSRuntime JS
@using Google.Cloud.Firestore
@inject FirestoreDb firestoreDb
@using ExArbete.Models
@using ExArbete.Interfaces
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IUserService userService

<PageTitle>ExArbete</PageTitle>

<div class="page">
    <CascadingValue Value="@categoryList">
        <NavMenu/>

    <main>
        <div class="top-row px-4">
            
            <div class="user-menu">
                <AuthorizeView>
                    <Authorized>
                            <div class="auth-row">
                                <p class="name-text">@(userService.User?.GoogleName ?? "")</p>
                                <div class="profile-image">
                                    <img src="@userService.User.ProfileImage" @onclick=ToggleMenu referrerpolicy="no-referrer">
                                </div>
                            
                            </div>
                        
                    </Authorized>
                    <NotAuthorized>
                        <span class="bi bi-person-circle user-icon" @onclick=ToggleMenu>
                </span>
                    </NotAuthorized>
                </AuthorizeView>
                
                <div id="dropdown" class="dropdown-menu @CssCollapse">
                    <ul class="user-menu-list">
                        <AuthorizeView>
                            <Authorized>
                                <li>Administration</li>
                                <li><NavLink href="/profile">Profile</NavLink></li>
                                <li><NavLink href="/Identity/Account/Logout">Log out</NavLink></li>
                            </Authorized>
                            <NotAuthorized>
                                <li><NavLink href="/Identity/Account/Login">Log in</NavLink></li>
                            </NotAuthorized>
                        </AuthorizeView>
                        
                        
                    </ul>
                </div>
            </div>
            
            
        </div>

        <article class="content px-4" @onclick='async (eventargs) => await HandleClick(eventargs)'>
            
              @Body  
            
        </article>
    </main>
    </CascadingValue>
</div>

@code {
    private List<Category> categoryList = new();
    private bool collapseMenu = true;
    private string? CssCollapse => collapseMenu ? "collapse" : null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
                AuthenticationState authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
                
                if(authenticationState.User.Identity.IsAuthenticated)
                {
                    await userService.GetDataIfExistingUser(authenticationState.User.Claims.Where(c => c.Type == ClaimTypes.Email).First().Value, firestoreDb);
                    
                }
            categoryList = await GetCategories();
            categoryList.OrderBy(d => d.Name);
            await InvokeAsync(() => StateHasChanged());
        }
    }

    private void ToggleMenu() {
        
        collapseMenu = !collapseMenu;
    }

    private async Task HandleClick(MouseEventArgs eventArgs) {
        bool outsideDropdownMenu = await JS.InvokeAsync<bool>("handleDropdownMenu", eventArgs.PageX, eventArgs.PageY);
            if(!collapseMenu && outsideDropdownMenu) {
                collapseMenu = outsideDropdownMenu;
            }
    }

    private async Task<List<Category>> GetCategories()
    {
        CollectionReference collection = firestoreDb.Collection("categories");
        Query orderByName = collection.OrderBy("Name");
        QuerySnapshot snapshot = await orderByName.GetSnapshotAsync();
        return snapshot.Documents.Select(d => d.ConvertTo<Category>()).ToList<Category>();
    }
}
